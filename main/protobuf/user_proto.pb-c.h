/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: user_proto.proto */

#ifndef PROTOBUF_C_user_5fproto_2eproto__INCLUDED
#define PROTOBUF_C_user_5fproto_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "common_proto.pb-c.h"

typedef struct _ChannelState ChannelState;
typedef struct _DeviceStateModel DeviceStateModel;
typedef struct _UserLoginRequest UserLoginRequest;
typedef struct _UserLoginResponse UserLoginResponse;
typedef struct _GetAccessTokenUserRequest GetAccessTokenUserRequest;
typedef struct _GetAccessTokenUserResponse GetAccessTokenUserResponse;
typedef struct _AuthUserMessage AuthUserMessage;
typedef struct _RequireStreamUserRequest RequireStreamUserRequest;
typedef struct _RequireStreamUserResponse RequireStreamUserResponse;
typedef struct _ControlLaneUserRequest ControlLaneUserRequest;
typedef struct _ControlLaneUserResponse ControlLaneUserResponse;
typedef struct _SetActiveTimeUserRequest SetActiveTimeUserRequest;
typedef struct _SetActiveTimeUserResponse SetActiveTimeUserResponse;
typedef struct _SetCycleConfigUserRequest SetCycleConfigUserRequest;
typedef struct _SetCycleConfigUserResponse SetCycleConfigUserResponse;
typedef struct _SetCoordinateUserRequest SetCoordinateUserRequest;
typedef struct _SetCoordinateUserResponse SetCoordinateUserResponse;
typedef struct _DeviceControlUserRequest DeviceControlUserRequest;
typedef struct _DeviceControlUserResponse DeviceControlUserResponse;
typedef struct _StateOnChangeUserMessage StateOnChangeUserMessage;
typedef struct _UpdateDeviceConnectionState UpdateDeviceConnectionState;
typedef struct _LogUpdateUserMessage LogUpdateUserMessage;
typedef struct _ErrorStatusUserMessage ErrorStatusUserMessage;
typedef struct _UpdatePowerStateUserMessage UpdatePowerStateUserMessage;
typedef struct _UpdateScheduleUserMessage UpdateScheduleUserMessage;
typedef struct _UpdateModeUserMessage UpdateModeUserMessage;
typedef struct _DeviceOnchangeUserMessage DeviceOnchangeUserMessage;
typedef struct _SyncTimeUserRequest SyncTimeUserRequest;
typedef struct _SyncTimeUserResponse SyncTimeUserResponse;
typedef struct _GetDeviceUserRequest GetDeviceUserRequest;
typedef struct _GetDeviceUserResponse GetDeviceUserResponse;
typedef struct _AddStationUserRequest AddStationUserRequest;
typedef struct _AddStationUserResponse AddStationUserResponse;
typedef struct _GetCoordinateUserRequest GetCoordinateUserRequest;
typedef struct _GetCoordinateUserResponse GetCoordinateUserResponse;
typedef struct _GetMeterInYearUserRequest GetMeterInYearUserRequest;
typedef struct _GetMeterInYearUserResponse GetMeterInYearUserResponse;
typedef struct _GetMeterInMonthUserRequest GetMeterInMonthUserRequest;
typedef struct _GetMeterInMonthUserResponse GetMeterInMonthUserResponse;
typedef struct _GetMeterInDayUserRequest GetMeterInDayUserRequest;
typedef struct _GetMeterInDayUserResponse GetMeterInDayUserResponse;
typedef struct _DeviceUserMessage DeviceUserMessage;
typedef struct _GetStationUserRequest GetStationUserRequest;
typedef struct _GetStationUserResponse GetStationUserResponse;
typedef struct _GetStationListUserRequest GetStationListUserRequest;
typedef struct _GetStationListUserResponse GetStationListUserResponse;
typedef struct _SetSignSettingUserRequest SetSignSettingUserRequest;
typedef struct _SetSignSettingUserResponse SetSignSettingUserResponse;
typedef struct _GetLatestFirmwareUserRequest GetLatestFirmwareUserRequest;
typedef struct _GetLatestFirmwareUserResponse GetLatestFirmwareUserResponse;
typedef struct _GetLogFileUserRequest GetLogFileUserRequest;
typedef struct _GetLogFileUserResponse GetLogFileUserResponse;
typedef struct _DeleteStationUserRequest DeleteStationUserRequest;
typedef struct _DeleteStationUserResponse DeleteStationUserResponse;
typedef struct _EditNumberCardUserRequest EditNumberCardUserRequest;
typedef struct _EditNumberCardUserResponse EditNumberCardUserResponse;
typedef struct _UpdateErrorHandlingUserRequest UpdateErrorHandlingUserRequest;
typedef struct _UpdateDiaryLogUserRequest UpdateDiaryLogUserRequest;
typedef struct _UpdateDiaryLogUserResponse UpdateDiaryLogUserResponse;
typedef struct _InsertAccessoryUserRequest InsertAccessoryUserRequest;
typedef struct _InsertAccessoryUserResponse InsertAccessoryUserResponse;
typedef struct _GetAccessoriesUserRequest GetAccessoriesUserRequest;
typedef struct _GetAccessoriesUserResponse GetAccessoriesUserResponse;
typedef struct _DeleteAccessoryUserRequest DeleteAccessoryUserRequest;
typedef struct _DeleteAccessoryUserResponse DeleteAccessoryUserResponse;
typedef struct _EditAccessoryUserRequest EditAccessoryUserRequest;
typedef struct _EditAccessoryUserResponse EditAccessoryUserResponse;
typedef struct _UpdateScheduleUserRequest UpdateScheduleUserRequest;
typedef struct _UpdateScheduleUserResponse UpdateScheduleUserResponse;
typedef struct _GetScheduleUserRequest GetScheduleUserRequest;
typedef struct _GetScheduleUserResponse GetScheduleUserResponse;
typedef struct _StationUserMessage StationUserMessage;
typedef struct _GetAccountsUserRequest GetAccountsUserRequest;
typedef struct _GetAccountsUserResponse GetAccountsUserResponse;
typedef struct _DeleteAccountUserRequest DeleteAccountUserRequest;
typedef struct _DeleteAccountUserResponse DeleteAccountUserResponse;
typedef struct _CreateNewAccountUserRequest CreateNewAccountUserRequest;
typedef struct _CreateNewAccountUserResponse CreateNewAccountUserResponse;
typedef struct _ChangePasswordUserRequest ChangePasswordUserRequest;
typedef struct _ChangePasswordUserResponse ChangePasswordUserResponse;
typedef struct _UpdateAlertInfoUserRequest UpdateAlertInfoUserRequest;
typedef struct _UpdateAlertInfoUserResponse UpdateAlertInfoUserResponse;
typedef struct _AccountUserMessage AccountUserMessage;
typedef struct _UserMessage UserMessage;


/* --- enums --- */

typedef enum _MeterItemType {
  METER_ITEM_TYPE__METER_ITEM_TYPE_HOUR = 0,
  METER_ITEM_TYPE__METER_ITEM_TYPE_DAY = 1,
  METER_ITEM_TYPE__METER_ITEM_TYPE_MONTH = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(METER_ITEM_TYPE)
} MeterItemType;

/* --- messages --- */

struct  _ChannelState
{
  ProtobufCMessage base;
  uint32_t index;
  uint32_t counter;
  TrafficLightState lightstate;
  WalkingState walkingstate;
  TrafficLightState mappingstate;
};
#define CHANNEL_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&channel_state__descriptor) \
    , 0, 0, TRAFFIC_LIGHT_STATE__TRAFFIC_LIGHT_STATE_NONE, WALKING_STATE__WALKING_STATE_OFF, TRAFFIC_LIGHT_STATE__TRAFFIC_LIGHT_STATE_NONE }


/*
 * Gói gửi 1 giây 
 */
struct  _DeviceStateModel
{
  ProtobufCMessage base;
  ConnectionState connectionstate;
  /*
   *Số pha đèn
   */
  uint32_t num_phase;
  /*
   *Dữ liệu ngõ ra đèn quy định theo _pin_out_profile_
   */
  size_t n_signal;
  uint32_t *signal;
  /*
   *Dũ liệu ngõ ra đèn ánh xạ quy định theo _pin_out_profile_
   */
  size_t n_mapping;
  uint32_t *mapping;
  /*
   *Biến đếm ngược từng pha đèn Pha [1 - 8]
   */
  size_t n_countdown;
  uint32_t *countdown;
  /*
   * Ngõ ra sensor detect ngõ ra quy định theo _pin_out_profile_ = 0 hoạt động bình thường =1 lỗi
   */
  size_t n_output_sensor;
  uint32_t *output_sensor;
  /*
   * tín hiệu đường sắt #0 có tác động
   */
  protobuf_c_boolean walking_signal;
  /*
   *Tín hiệu đi bộ #0 có tác động
   */
  protobuf_c_boolean railway_signal;
  /*
   *Chế độ cpu đang hoạt động _mtfc_main_work_state_
   */
  MTFCMainWorkState cpu_active_mode;
  /*
   *(1)
   */
  uint32_t idx_time_form;
  /*
   *(2)
   */
  uint32_t idx_timeline;
  /*
   *(3)
   */
  uint32_t idx_cycle_form;
  /*
   * Device không quan tâm message này
   */
  size_t n_lanestate;
  LaneState **lanestate;
  char *cputime;
  uint32_t laneactive;
  protobuf_c_boolean cpuonoff;
  protobuf_c_boolean iswalkingsignalenable;
  protobuf_c_boolean israilwaysignalenable;
  char *cputype;
  size_t n_sidetime;
  OneSideLampTime **sidetime;
  uint32_t clearancetime;
  char *activebegin;
  char *activeend;
  size_t n_channelstate;
  ChannelState **channelstate;
};
#define DEVICE_STATE_MODEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&device_state_model__descriptor) \
    , CONNECTION_STATE__CONNECTION_OFFLINE, 0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0, 0, MTFCMAIN_WORK_STATE__MTFC_STATE_off, 0, 0, 0, 0,NULL, (char *)protobuf_c_empty_string, 0, 0, 0, 0, (char *)protobuf_c_empty_string, 0,NULL, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


struct  _UserLoginRequest
{
  ProtobufCMessage base;
  char *username;
  char *password;
  char *userid;
  char *assignedstationid;
  protobuf_c_boolean isweb;
};
#define USER_LOGIN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_login_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  _UserLoginResponse
{
  ProtobufCMessage base;
  char *projectid;
  char *userid;
  uint32_t role;
  char *mapkey;
  char *email;
  char *phone;
  StatusCode *statuscode;
};
#define USER_LOGIN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_login_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


struct  _GetAccessTokenUserRequest
{
  ProtobufCMessage base;
};
#define GET_ACCESS_TOKEN_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_access_token_user_request__descriptor) \
     }


struct  _GetAccessTokenUserResponse
{
  ProtobufCMessage base;
  char *accesstoken;
  StatusCode *statuscode;
};
#define GET_ACCESS_TOKEN_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_access_token_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  _AuthUserMessage
{
  ProtobufCMessage base;
  UserLoginRequest *userloginrequest;
  UserLoginResponse *userloginresponse;
  GetAccessTokenUserRequest *getaccesstokenuserrequest;
  GetAccessTokenUserResponse *getaccesstokenuserresponse;
};
#define AUTH_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&auth_user_message__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _RequireStreamUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  protobuf_c_boolean enable;
  protobuf_c_boolean isweb;
};
#define REQUIRE_STREAM_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&require_stream_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


struct  _RequireStreamUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define REQUIRE_STREAM_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&require_stream_user_response__descriptor) \
    , NULL }


struct  _ControlLaneUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  uint32_t laneindex;
  protobuf_c_boolean ispoweron;
};
#define CONTROL_LANE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&control_lane_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


struct  _ControlLaneUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define CONTROL_LANE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&control_lane_user_response__descriptor) \
    , NULL }


struct  _SetActiveTimeUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  ActiveLamp *activelamp;
};
#define SET_ACTIVE_TIME_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_active_time_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  _SetActiveTimeUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define SET_ACTIVE_TIME_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_active_time_user_response__descriptor) \
    , NULL }


struct  _SetCycleConfigUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  uint32_t numphase;
  uint32_t yellowtime;
  uint32_t clearancetime;
  size_t n_greentime;
  uint32_t *greentime;
};
#define SET_CYCLE_CONFIG_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_cycle_config_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0,NULL }


struct  _SetCycleConfigUserResponse
{
  ProtobufCMessage base;
};
#define SET_CYCLE_CONFIG_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_cycle_config_user_response__descriptor) \
     }


struct  _SetCoordinateUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  double colat;
  double colong;
};
#define SET_COORDINATE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_coordinate_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


struct  _SetCoordinateUserResponse
{
  ProtobufCMessage base;
};
#define SET_COORDINATE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_coordinate_user_response__descriptor) \
     }


struct  _DeviceControlUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  protobuf_c_boolean ispoweron;
};
#define DEVICE_CONTROL_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&device_control_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _DeviceControlUserResponse
{
  ProtobufCMessage base;
};
#define DEVICE_CONTROL_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&device_control_user_response__descriptor) \
     }


struct  _StateOnChangeUserMessage
{
  ProtobufCMessage base;
  char *deviceid;
  DeviceStateModel *update1second;
};
#define STATE_ON_CHANGE_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&state_on_change_user_message__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  _UpdateDeviceConnectionState
{
  ProtobufCMessage base;
  char *deviceid;
  ConnectionState connectionstate;
};
#define UPDATE_DEVICE_CONNECTION_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_device_connection_state__descriptor) \
    , (char *)protobuf_c_empty_string, CONNECTION_STATE__CONNECTION_OFFLINE }


struct  _LogUpdateUserMessage
{
  ProtobufCMessage base;
  char *deviceid;
  char *message;
};
#define LOG_UPDATE_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log_update_user_message__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _ErrorStatusUserMessage
{
  ProtobufCMessage base;
  char *deviceid;
  uint32_t errorstatus;
  char *notelist;
};
#define ERROR_STATUS_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&error_status_user_message__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string }


struct  _UpdatePowerStateUserMessage
{
  ProtobufCMessage base;
  char *deviceid;
  protobuf_c_boolean ison;
};
#define UPDATE_POWER_STATE_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_power_state_user_message__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _UpdateScheduleUserMessage
{
  ProtobufCMessage base;
  char *deviceid;
  /*
   *Thời gian CPU hoạt động chế độ đếm ngược ví dụ 5H00 đến 22h00 (2)
   */
  char *activebegin;
  char *activeend;
};
#define UPDATE_SCHEDULE_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_schedule_user_message__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _UpdateModeUserMessage
{
  ProtobufCMessage base;
  char *deviceid;
  uint32_t mode;
};
#define UPDATE_MODE_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_mode_user_message__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _DeviceOnchangeUserMessage
{
  ProtobufCMessage base;
  UpdateDeviceConnectionState *updatedeviceconnectionstate;
  StateOnChangeUserMessage *devicestateonchange;
  LogUpdateUserMessage *logupdate;
  ErrorStatusUserMessage *errorstatususermessage;
  UpdatePowerStateUserMessage *updatepowerstateusermessage;
  UpdateScheduleUserMessage *updatescheduleusermessage;
  UpdateModeUserMessage *updatemodeusermessage;
};
#define DEVICE_ONCHANGE_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&device_onchange_user_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _SyncTimeUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
};
#define SYNC_TIME_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sync_time_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _SyncTimeUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define SYNC_TIME_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sync_time_user_response__descriptor) \
    , NULL }


struct  _GetDeviceUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  char *hardwareid;
};
#define GET_DEVICE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_device_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _GetDeviceUserResponse
{
  ProtobufCMessage base;
  Device *device;
  StatusCode *statuscode;
};
#define GET_DEVICE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_device_user_response__descriptor) \
    , NULL, NULL }


struct  _AddStationUserRequest
{
  ProtobufCMessage base;
  char *stationname;
  char *hardwareid;
  float stationlat;
  float stationlong;
};
#define ADD_STATION_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_station_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0 }


struct  _AddStationUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define ADD_STATION_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_station_user_response__descriptor) \
    , NULL }


struct  _GetCoordinateUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  char *hardwareid;
};
#define GET_COORDINATE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_coordinate_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _GetCoordinateUserResponse
{
  ProtobufCMessage base;
  float lat;
  float log;
  StatusCode *statuscode;
};
#define GET_COORDINATE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_coordinate_user_response__descriptor) \
    , 0, 0, NULL }


struct  _GetMeterInYearUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
};
#define GET_METER_IN_YEAR_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_meter_in_year_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _GetMeterInYearUserResponse
{
  ProtobufCMessage base;
  char *deviceid;
  size_t n_meteritems;
  MeterItem **meteritems;
};
#define GET_METER_IN_YEAR_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_meter_in_year_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  _GetMeterInMonthUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  char *month;
};
#define GET_METER_IN_MONTH_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_meter_in_month_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _GetMeterInMonthUserResponse
{
  ProtobufCMessage base;
  char *deviceid;
  size_t n_meteritems;
  MeterItem **meteritems;
};
#define GET_METER_IN_MONTH_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_meter_in_month_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  _GetMeterInDayUserRequest
{
  ProtobufCMessage base;
  char *deviceid;
  /*
   * dd/MM/yyyy
   */
  char *date;
};
#define GET_METER_IN_DAY_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_meter_in_day_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _GetMeterInDayUserResponse
{
  ProtobufCMessage base;
  char *deviceid;
  size_t n_meteritems;
  MeterItem **meteritems;
};
#define GET_METER_IN_DAY_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_meter_in_day_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  _DeviceUserMessage
{
  ProtobufCMessage base;
  DeviceControlUserRequest *devicecontroluserrequest;
  DeviceControlUserResponse *devicecontroluserresponse;
  RequireStreamUserRequest *requirestreamuserrequest;
  RequireStreamUserResponse *requirestreamuserresponse;
  ControlLaneUserRequest *controllaneuserrequest;
  ControlLaneUserResponse *controllaneuserresponse;
  SetActiveTimeUserRequest *setactivetimeuserrequest;
  SetActiveTimeUserResponse *setactivetimeuserresponse;
  SetCycleConfigUserRequest *setcycleconfiguserrequest;
  SetCycleConfigUserResponse *setcycleconfiguserresponse;
  SetCoordinateUserRequest *setcoordinateuserrequest;
  SetCoordinateUserResponse *setcoordinateuserresponse;
  SyncTimeUserRequest *synctimeuserrequest;
  SyncTimeUserResponse *synctimeuserresponse;
  GetDeviceUserRequest *getdeviceuserrequest;
  GetDeviceUserResponse *getdeviceuserresponse;
  GetCoordinateUserRequest *getcoordinateuserrequest;
  GetCoordinateUserResponse *getcoordinateuserresponse;
  GetMeterInDayUserRequest *getmeterindayuserrequest;
  GetMeterInDayUserResponse *getmeterindayuserresponse;
  GetMeterInMonthUserRequest *getmeterinmonthuserrequest;
  GetMeterInMonthUserResponse *getmeterinmonthuserresponse;
  GetMeterInYearUserRequest *getmeterinyearuserrequest;
  GetMeterInYearUserResponse *getmeterinyearuserresponse;
};
#define DEVICE_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&device_user_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _GetStationUserRequest
{
  ProtobufCMessage base;
  char *stationid;
};
#define GET_STATION_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_station_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _GetStationUserResponse
{
  ProtobufCMessage base;
  Station *station;
  StatusCode *statuscode;
};
#define GET_STATION_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_station_user_response__descriptor) \
    , NULL, NULL }


struct  _GetStationListUserRequest
{
  ProtobufCMessage base;
  char *projectid;
};
#define GET_STATION_LIST_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_station_list_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _GetStationListUserResponse
{
  ProtobufCMessage base;
  size_t n_stations;
  Station **stations;
  float originlat;
  float originlong;
  StatusCode *statuscode;
};
#define GET_STATION_LIST_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_station_list_user_response__descriptor) \
    , 0,NULL, 0, 0, NULL }


struct  _SetSignSettingUserRequest
{
  ProtobufCMessage base;
  char *stationid;
  size_t n_channelrailway;
  SignParam **channelrailway;
  size_t n_channelwalking;
  SignParam **channelwalking;
  size_t n_channelturnleft;
  SignParam **channelturnleft;
  size_t n_channelturnright;
  SignParam **channelturnright;
  size_t n_channelgoahead;
  SignParam **channelgoahead;
  size_t n_channeltrafficlight;
  SignParam **channeltrafficlight;
  size_t n_channelcounter;
  SignParam **channelcounter;
  size_t n_channellabel;
  SignParam **channellabel;
  char *backgroundsrc;
};
#define SET_SIGN_SETTING_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_sign_setting_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, (char *)protobuf_c_empty_string }


struct  _SetSignSettingUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define SET_SIGN_SETTING_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_sign_setting_user_response__descriptor) \
    , NULL }


struct  _GetLatestFirmwareUserRequest
{
  ProtobufCMessage base;
};
#define GET_LATEST_FIRMWARE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_latest_firmware_user_request__descriptor) \
     }


struct  _GetLatestFirmwareUserResponse
{
  ProtobufCMessage base;
  char *latestfirmware;
  char *latestappversion;
  StatusCode *statuscode;
};
#define GET_LATEST_FIRMWARE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_latest_firmware_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


struct  _GetLogFileUserRequest
{
  ProtobufCMessage base;
  char *stationid;
  char *date;
};
#define GET_LOG_FILE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_log_file_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _GetLogFileUserResponse
{
  ProtobufCMessage base;
  char *log;
  StatusCode *statuscode;
};
#define GET_LOG_FILE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_log_file_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  _DeleteStationUserRequest
{
  ProtobufCMessage base;
  char *stationid;
};
#define DELETE_STATION_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_station_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _DeleteStationUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define DELETE_STATION_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_station_user_response__descriptor) \
    , NULL }


struct  _EditNumberCardUserRequest
{
  ProtobufCMessage base;
  char *stationid;
  uint32_t ncard;
};
#define EDIT_NUMBER_CARD_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&edit_number_card_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _EditNumberCardUserResponse
{
  ProtobufCMessage base;
  uint32_t ncard;
  StatusCode *statuscode;
};
#define EDIT_NUMBER_CARD_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&edit_number_card_user_response__descriptor) \
    , 0, NULL }


struct  _UpdateErrorHandlingUserRequest
{
  ProtobufCMessage base;
  char *stationid;
  uint32_t errorstatus;
};
#define UPDATE_ERROR_HANDLING_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_error_handling_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _UpdateDiaryLogUserRequest
{
  ProtobufCMessage base;
  char *stationid;
  char *message;
};
#define UPDATE_DIARY_LOG_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_diary_log_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _UpdateDiaryLogUserResponse
{
  ProtobufCMessage base;
  char *fulllog;
  StatusCode *statuscode;
};
#define UPDATE_DIARY_LOG_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_diary_log_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  _InsertAccessoryUserRequest
{
  ProtobufCMessage base;
  Accessory *accessory;
};
#define INSERT_ACCESSORY_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&insert_accessory_user_request__descriptor) \
    , NULL }


struct  _InsertAccessoryUserResponse
{
  ProtobufCMessage base;
  size_t n_accessories;
  Accessory **accessories;
  StatusCode *statuscode;
};
#define INSERT_ACCESSORY_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&insert_accessory_user_response__descriptor) \
    , 0,NULL, NULL }


struct  _GetAccessoriesUserRequest
{
  ProtobufCMessage base;
  char *stationid;
};
#define GET_ACCESSORIES_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_accessories_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _GetAccessoriesUserResponse
{
  ProtobufCMessage base;
  size_t n_accessories;
  Accessory **accessories;
  StatusCode *statuscode;
};
#define GET_ACCESSORIES_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_accessories_user_response__descriptor) \
    , 0,NULL, NULL }


struct  _DeleteAccessoryUserRequest
{
  ProtobufCMessage base;
  char *stationid;
  char *accessoryid;
};
#define DELETE_ACCESSORY_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_accessory_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _DeleteAccessoryUserResponse
{
  ProtobufCMessage base;
  size_t n_accessories;
  Accessory **accessories;
  StatusCode *statuscode;
};
#define DELETE_ACCESSORY_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_accessory_user_response__descriptor) \
    , 0,NULL, NULL }


struct  _EditAccessoryUserRequest
{
  ProtobufCMessage base;
  Accessory *accessories;
};
#define EDIT_ACCESSORY_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&edit_accessory_user_request__descriptor) \
    , NULL }


struct  _EditAccessoryUserResponse
{
  ProtobufCMessage base;
  size_t n_accessories;
  Accessory **accessories;
  StatusCode *statuscode;
};
#define EDIT_ACCESSORY_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&edit_accessory_user_response__descriptor) \
    , 0,NULL, NULL }


struct  _UpdateScheduleUserRequest
{
  ProtobufCMessage base;
  char *stationid;
  TimeLampForm *timelampform;
  CycleLampForm *cycle;
  DayLampForm *days;
};
#define UPDATE_SCHEDULE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_schedule_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, NULL, NULL }


struct  _UpdateScheduleUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define UPDATE_SCHEDULE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_schedule_user_response__descriptor) \
    , NULL }


struct  _GetScheduleUserRequest
{
  ProtobufCMessage base;
  char *stationid;
};
#define GET_SCHEDULE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_schedule_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _GetScheduleUserResponse
{
  ProtobufCMessage base;
  char *stationid;
  TimeLampForm *timelampform;
  CycleLampForm *cycle;
  DayLampForm *days;
  StatusCode *statuscode;
};
#define GET_SCHEDULE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_schedule_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, NULL, NULL, NULL }


struct  _StationUserMessage
{
  ProtobufCMessage base;
  GetStationUserRequest *getstationuserrequest;
  GetStationUserResponse *getstationuserresponse;
  GetStationListUserRequest *getstationlistuserrequest;
  GetStationListUserResponse *getstationlistuserresponse;
  AddStationUserRequest *addstationuserrequest;
  AddStationUserResponse *addstationuserresponse;
  SetSignSettingUserRequest *setsignsettinguserrequest;
  SetSignSettingUserResponse *setsignsettinguserresponse;
  GetLatestFirmwareUserRequest *getlatestfirmwareuserrequest;
  GetLatestFirmwareUserResponse *getlatestfirmwareuserresponse;
  GetLogFileUserRequest *getlogfileuserrequest;
  GetLogFileUserResponse *getlogfileuserresponse;
  DeleteStationUserRequest *deletestationuserrequest;
  DeleteStationUserResponse *deletestationuserresponse;
  EditNumberCardUserRequest *editnumbercarduserrequest;
  EditNumberCardUserResponse *editnumbercarduserresponse;
  UpdateErrorHandlingUserRequest *updateerrorhandlinguserrequest;
  UpdateDiaryLogUserRequest *updatediaryloguserrequest;
  UpdateDiaryLogUserResponse *updatediaryloguserresponse;
  InsertAccessoryUserRequest *insertaccessoryuserrequest;
  InsertAccessoryUserResponse *insertaccessoryuserresponse;
  GetAccessoriesUserRequest *getaccessoriesuserrequest;
  GetAccessoriesUserResponse *getaccessoriesuserresponse;
  DeleteAccessoryUserRequest *deleteaccessoryuserrequest;
  DeleteAccessoryUserResponse *deleteaccessoryuserresponse;
  EditAccessoryUserRequest *editaccessoryuserrequest;
  EditAccessoryUserResponse *editaccessoryuserresponse;
  UpdateScheduleUserRequest *updatescheduleuserrequest;
  UpdateScheduleUserResponse *updatescheduleuserresponse;
  GetScheduleUserRequest *getscheduleuserrequest;
  GetScheduleUserResponse *getscheduleuserresponse;
};
#define STATION_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&station_user_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _GetAccountsUserRequest
{
  ProtobufCMessage base;
  char *projectid;
};
#define GET_ACCOUNTS_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_accounts_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _GetAccountsUserResponse
{
  ProtobufCMessage base;
  size_t n_accounts;
  Account **accounts;
  StatusCode *statuscode;
};
#define GET_ACCOUNTS_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_accounts_user_response__descriptor) \
    , 0,NULL, NULL }


struct  _DeleteAccountUserRequest
{
  ProtobufCMessage base;
  char *userid;
};
#define DELETE_ACCOUNT_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_account_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _DeleteAccountUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define DELETE_ACCOUNT_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_account_user_response__descriptor) \
    , NULL }


struct  _CreateNewAccountUserRequest
{
  ProtobufCMessage base;
  char *username;
  char *password;
  uint32_t role;
};
#define CREATE_NEW_ACCOUNT_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&create_new_account_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  _CreateNewAccountUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define CREATE_NEW_ACCOUNT_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&create_new_account_user_response__descriptor) \
    , NULL }


struct  _ChangePasswordUserRequest
{
  ProtobufCMessage base;
  char *password;
  char *newpassword;
};
#define CHANGE_PASSWORD_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&change_password_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _ChangePasswordUserResponse
{
  ProtobufCMessage base;
  StatusCode *statuscode;
};
#define CHANGE_PASSWORD_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&change_password_user_response__descriptor) \
    , NULL }


struct  _UpdateAlertInfoUserRequest
{
  ProtobufCMessage base;
  char *email;
  char *phone;
};
#define UPDATE_ALERT_INFO_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_alert_info_user_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _UpdateAlertInfoUserResponse
{
  ProtobufCMessage base;
  char *email;
  char *phone;
  StatusCode *statuscode;
};
#define UPDATE_ALERT_INFO_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_alert_info_user_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


struct  _AccountUserMessage
{
  ProtobufCMessage base;
  GetAccountsUserRequest *getaccountsuserrequest;
  GetAccountsUserResponse *getaccountsuserresponse;
  DeleteAccountUserRequest *deleteaccountuserrequest;
  DeleteAccountUserResponse *deleteaccountuserresponse;
  CreateNewAccountUserRequest *createnewaccountuserrequest;
  CreateNewAccountUserResponse *createnewaccountuserresponse;
  ChangePasswordUserRequest *changepassworduserrequest;
  ChangePasswordUserResponse *changepassworduserresponse;
  UpdateAlertInfoUserRequest *updatealertinfouserrequest;
  UpdateAlertInfoUserResponse *updatealertinfouserresponse;
};
#define ACCOUNT_USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&account_user_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _UserMessage
{
  ProtobufCMessage base;
  AuthUserMessage *authusermessage;
  DeviceUserMessage *deviceusermessage;
  DeviceOnchangeUserMessage *deviceonchangeusermessage;
  StationUserMessage *stationusermessage;
  AccountUserMessage *accountusermessage;
};
#define USER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL }


/* ChannelState methods */
void   channel_state__init
                     (ChannelState         *message);
size_t channel_state__get_packed_size
                     (const ChannelState   *message);
size_t channel_state__pack
                     (const ChannelState   *message,
                      uint8_t             *out);
size_t channel_state__pack_to_buffer
                     (const ChannelState   *message,
                      ProtobufCBuffer     *buffer);
ChannelState *
       channel_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   channel_state__free_unpacked
                     (ChannelState *message,
                      ProtobufCAllocator *allocator);
/* DeviceStateModel methods */
void   device_state_model__init
                     (DeviceStateModel         *message);
size_t device_state_model__get_packed_size
                     (const DeviceStateModel   *message);
size_t device_state_model__pack
                     (const DeviceStateModel   *message,
                      uint8_t             *out);
size_t device_state_model__pack_to_buffer
                     (const DeviceStateModel   *message,
                      ProtobufCBuffer     *buffer);
DeviceStateModel *
       device_state_model__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   device_state_model__free_unpacked
                     (DeviceStateModel *message,
                      ProtobufCAllocator *allocator);
/* UserLoginRequest methods */
void   user_login_request__init
                     (UserLoginRequest         *message);
size_t user_login_request__get_packed_size
                     (const UserLoginRequest   *message);
size_t user_login_request__pack
                     (const UserLoginRequest   *message,
                      uint8_t             *out);
size_t user_login_request__pack_to_buffer
                     (const UserLoginRequest   *message,
                      ProtobufCBuffer     *buffer);
UserLoginRequest *
       user_login_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_login_request__free_unpacked
                     (UserLoginRequest *message,
                      ProtobufCAllocator *allocator);
/* UserLoginResponse methods */
void   user_login_response__init
                     (UserLoginResponse         *message);
size_t user_login_response__get_packed_size
                     (const UserLoginResponse   *message);
size_t user_login_response__pack
                     (const UserLoginResponse   *message,
                      uint8_t             *out);
size_t user_login_response__pack_to_buffer
                     (const UserLoginResponse   *message,
                      ProtobufCBuffer     *buffer);
UserLoginResponse *
       user_login_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_login_response__free_unpacked
                     (UserLoginResponse *message,
                      ProtobufCAllocator *allocator);
/* GetAccessTokenUserRequest methods */
void   get_access_token_user_request__init
                     (GetAccessTokenUserRequest         *message);
size_t get_access_token_user_request__get_packed_size
                     (const GetAccessTokenUserRequest   *message);
size_t get_access_token_user_request__pack
                     (const GetAccessTokenUserRequest   *message,
                      uint8_t             *out);
size_t get_access_token_user_request__pack_to_buffer
                     (const GetAccessTokenUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetAccessTokenUserRequest *
       get_access_token_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_access_token_user_request__free_unpacked
                     (GetAccessTokenUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetAccessTokenUserResponse methods */
void   get_access_token_user_response__init
                     (GetAccessTokenUserResponse         *message);
size_t get_access_token_user_response__get_packed_size
                     (const GetAccessTokenUserResponse   *message);
size_t get_access_token_user_response__pack
                     (const GetAccessTokenUserResponse   *message,
                      uint8_t             *out);
size_t get_access_token_user_response__pack_to_buffer
                     (const GetAccessTokenUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetAccessTokenUserResponse *
       get_access_token_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_access_token_user_response__free_unpacked
                     (GetAccessTokenUserResponse *message,
                      ProtobufCAllocator *allocator);
/* AuthUserMessage methods */
void   auth_user_message__init
                     (AuthUserMessage         *message);
size_t auth_user_message__get_packed_size
                     (const AuthUserMessage   *message);
size_t auth_user_message__pack
                     (const AuthUserMessage   *message,
                      uint8_t             *out);
size_t auth_user_message__pack_to_buffer
                     (const AuthUserMessage   *message,
                      ProtobufCBuffer     *buffer);
AuthUserMessage *
       auth_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   auth_user_message__free_unpacked
                     (AuthUserMessage *message,
                      ProtobufCAllocator *allocator);
/* RequireStreamUserRequest methods */
void   require_stream_user_request__init
                     (RequireStreamUserRequest         *message);
size_t require_stream_user_request__get_packed_size
                     (const RequireStreamUserRequest   *message);
size_t require_stream_user_request__pack
                     (const RequireStreamUserRequest   *message,
                      uint8_t             *out);
size_t require_stream_user_request__pack_to_buffer
                     (const RequireStreamUserRequest   *message,
                      ProtobufCBuffer     *buffer);
RequireStreamUserRequest *
       require_stream_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   require_stream_user_request__free_unpacked
                     (RequireStreamUserRequest *message,
                      ProtobufCAllocator *allocator);
/* RequireStreamUserResponse methods */
void   require_stream_user_response__init
                     (RequireStreamUserResponse         *message);
size_t require_stream_user_response__get_packed_size
                     (const RequireStreamUserResponse   *message);
size_t require_stream_user_response__pack
                     (const RequireStreamUserResponse   *message,
                      uint8_t             *out);
size_t require_stream_user_response__pack_to_buffer
                     (const RequireStreamUserResponse   *message,
                      ProtobufCBuffer     *buffer);
RequireStreamUserResponse *
       require_stream_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   require_stream_user_response__free_unpacked
                     (RequireStreamUserResponse *message,
                      ProtobufCAllocator *allocator);
/* ControlLaneUserRequest methods */
void   control_lane_user_request__init
                     (ControlLaneUserRequest         *message);
size_t control_lane_user_request__get_packed_size
                     (const ControlLaneUserRequest   *message);
size_t control_lane_user_request__pack
                     (const ControlLaneUserRequest   *message,
                      uint8_t             *out);
size_t control_lane_user_request__pack_to_buffer
                     (const ControlLaneUserRequest   *message,
                      ProtobufCBuffer     *buffer);
ControlLaneUserRequest *
       control_lane_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   control_lane_user_request__free_unpacked
                     (ControlLaneUserRequest *message,
                      ProtobufCAllocator *allocator);
/* ControlLaneUserResponse methods */
void   control_lane_user_response__init
                     (ControlLaneUserResponse         *message);
size_t control_lane_user_response__get_packed_size
                     (const ControlLaneUserResponse   *message);
size_t control_lane_user_response__pack
                     (const ControlLaneUserResponse   *message,
                      uint8_t             *out);
size_t control_lane_user_response__pack_to_buffer
                     (const ControlLaneUserResponse   *message,
                      ProtobufCBuffer     *buffer);
ControlLaneUserResponse *
       control_lane_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   control_lane_user_response__free_unpacked
                     (ControlLaneUserResponse *message,
                      ProtobufCAllocator *allocator);
/* SetActiveTimeUserRequest methods */
void   set_active_time_user_request__init
                     (SetActiveTimeUserRequest         *message);
size_t set_active_time_user_request__get_packed_size
                     (const SetActiveTimeUserRequest   *message);
size_t set_active_time_user_request__pack
                     (const SetActiveTimeUserRequest   *message,
                      uint8_t             *out);
size_t set_active_time_user_request__pack_to_buffer
                     (const SetActiveTimeUserRequest   *message,
                      ProtobufCBuffer     *buffer);
SetActiveTimeUserRequest *
       set_active_time_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_active_time_user_request__free_unpacked
                     (SetActiveTimeUserRequest *message,
                      ProtobufCAllocator *allocator);
/* SetActiveTimeUserResponse methods */
void   set_active_time_user_response__init
                     (SetActiveTimeUserResponse         *message);
size_t set_active_time_user_response__get_packed_size
                     (const SetActiveTimeUserResponse   *message);
size_t set_active_time_user_response__pack
                     (const SetActiveTimeUserResponse   *message,
                      uint8_t             *out);
size_t set_active_time_user_response__pack_to_buffer
                     (const SetActiveTimeUserResponse   *message,
                      ProtobufCBuffer     *buffer);
SetActiveTimeUserResponse *
       set_active_time_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_active_time_user_response__free_unpacked
                     (SetActiveTimeUserResponse *message,
                      ProtobufCAllocator *allocator);
/* SetCycleConfigUserRequest methods */
void   set_cycle_config_user_request__init
                     (SetCycleConfigUserRequest         *message);
size_t set_cycle_config_user_request__get_packed_size
                     (const SetCycleConfigUserRequest   *message);
size_t set_cycle_config_user_request__pack
                     (const SetCycleConfigUserRequest   *message,
                      uint8_t             *out);
size_t set_cycle_config_user_request__pack_to_buffer
                     (const SetCycleConfigUserRequest   *message,
                      ProtobufCBuffer     *buffer);
SetCycleConfigUserRequest *
       set_cycle_config_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_cycle_config_user_request__free_unpacked
                     (SetCycleConfigUserRequest *message,
                      ProtobufCAllocator *allocator);
/* SetCycleConfigUserResponse methods */
void   set_cycle_config_user_response__init
                     (SetCycleConfigUserResponse         *message);
size_t set_cycle_config_user_response__get_packed_size
                     (const SetCycleConfigUserResponse   *message);
size_t set_cycle_config_user_response__pack
                     (const SetCycleConfigUserResponse   *message,
                      uint8_t             *out);
size_t set_cycle_config_user_response__pack_to_buffer
                     (const SetCycleConfigUserResponse   *message,
                      ProtobufCBuffer     *buffer);
SetCycleConfigUserResponse *
       set_cycle_config_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_cycle_config_user_response__free_unpacked
                     (SetCycleConfigUserResponse *message,
                      ProtobufCAllocator *allocator);
/* SetCoordinateUserRequest methods */
void   set_coordinate_user_request__init
                     (SetCoordinateUserRequest         *message);
size_t set_coordinate_user_request__get_packed_size
                     (const SetCoordinateUserRequest   *message);
size_t set_coordinate_user_request__pack
                     (const SetCoordinateUserRequest   *message,
                      uint8_t             *out);
size_t set_coordinate_user_request__pack_to_buffer
                     (const SetCoordinateUserRequest   *message,
                      ProtobufCBuffer     *buffer);
SetCoordinateUserRequest *
       set_coordinate_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_coordinate_user_request__free_unpacked
                     (SetCoordinateUserRequest *message,
                      ProtobufCAllocator *allocator);
/* SetCoordinateUserResponse methods */
void   set_coordinate_user_response__init
                     (SetCoordinateUserResponse         *message);
size_t set_coordinate_user_response__get_packed_size
                     (const SetCoordinateUserResponse   *message);
size_t set_coordinate_user_response__pack
                     (const SetCoordinateUserResponse   *message,
                      uint8_t             *out);
size_t set_coordinate_user_response__pack_to_buffer
                     (const SetCoordinateUserResponse   *message,
                      ProtobufCBuffer     *buffer);
SetCoordinateUserResponse *
       set_coordinate_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_coordinate_user_response__free_unpacked
                     (SetCoordinateUserResponse *message,
                      ProtobufCAllocator *allocator);
/* DeviceControlUserRequest methods */
void   device_control_user_request__init
                     (DeviceControlUserRequest         *message);
size_t device_control_user_request__get_packed_size
                     (const DeviceControlUserRequest   *message);
size_t device_control_user_request__pack
                     (const DeviceControlUserRequest   *message,
                      uint8_t             *out);
size_t device_control_user_request__pack_to_buffer
                     (const DeviceControlUserRequest   *message,
                      ProtobufCBuffer     *buffer);
DeviceControlUserRequest *
       device_control_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   device_control_user_request__free_unpacked
                     (DeviceControlUserRequest *message,
                      ProtobufCAllocator *allocator);
/* DeviceControlUserResponse methods */
void   device_control_user_response__init
                     (DeviceControlUserResponse         *message);
size_t device_control_user_response__get_packed_size
                     (const DeviceControlUserResponse   *message);
size_t device_control_user_response__pack
                     (const DeviceControlUserResponse   *message,
                      uint8_t             *out);
size_t device_control_user_response__pack_to_buffer
                     (const DeviceControlUserResponse   *message,
                      ProtobufCBuffer     *buffer);
DeviceControlUserResponse *
       device_control_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   device_control_user_response__free_unpacked
                     (DeviceControlUserResponse *message,
                      ProtobufCAllocator *allocator);
/* StateOnChangeUserMessage methods */
void   state_on_change_user_message__init
                     (StateOnChangeUserMessage         *message);
size_t state_on_change_user_message__get_packed_size
                     (const StateOnChangeUserMessage   *message);
size_t state_on_change_user_message__pack
                     (const StateOnChangeUserMessage   *message,
                      uint8_t             *out);
size_t state_on_change_user_message__pack_to_buffer
                     (const StateOnChangeUserMessage   *message,
                      ProtobufCBuffer     *buffer);
StateOnChangeUserMessage *
       state_on_change_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   state_on_change_user_message__free_unpacked
                     (StateOnChangeUserMessage *message,
                      ProtobufCAllocator *allocator);
/* UpdateDeviceConnectionState methods */
void   update_device_connection_state__init
                     (UpdateDeviceConnectionState         *message);
size_t update_device_connection_state__get_packed_size
                     (const UpdateDeviceConnectionState   *message);
size_t update_device_connection_state__pack
                     (const UpdateDeviceConnectionState   *message,
                      uint8_t             *out);
size_t update_device_connection_state__pack_to_buffer
                     (const UpdateDeviceConnectionState   *message,
                      ProtobufCBuffer     *buffer);
UpdateDeviceConnectionState *
       update_device_connection_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_device_connection_state__free_unpacked
                     (UpdateDeviceConnectionState *message,
                      ProtobufCAllocator *allocator);
/* LogUpdateUserMessage methods */
void   log_update_user_message__init
                     (LogUpdateUserMessage         *message);
size_t log_update_user_message__get_packed_size
                     (const LogUpdateUserMessage   *message);
size_t log_update_user_message__pack
                     (const LogUpdateUserMessage   *message,
                      uint8_t             *out);
size_t log_update_user_message__pack_to_buffer
                     (const LogUpdateUserMessage   *message,
                      ProtobufCBuffer     *buffer);
LogUpdateUserMessage *
       log_update_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   log_update_user_message__free_unpacked
                     (LogUpdateUserMessage *message,
                      ProtobufCAllocator *allocator);
/* ErrorStatusUserMessage methods */
void   error_status_user_message__init
                     (ErrorStatusUserMessage         *message);
size_t error_status_user_message__get_packed_size
                     (const ErrorStatusUserMessage   *message);
size_t error_status_user_message__pack
                     (const ErrorStatusUserMessage   *message,
                      uint8_t             *out);
size_t error_status_user_message__pack_to_buffer
                     (const ErrorStatusUserMessage   *message,
                      ProtobufCBuffer     *buffer);
ErrorStatusUserMessage *
       error_status_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   error_status_user_message__free_unpacked
                     (ErrorStatusUserMessage *message,
                      ProtobufCAllocator *allocator);
/* UpdatePowerStateUserMessage methods */
void   update_power_state_user_message__init
                     (UpdatePowerStateUserMessage         *message);
size_t update_power_state_user_message__get_packed_size
                     (const UpdatePowerStateUserMessage   *message);
size_t update_power_state_user_message__pack
                     (const UpdatePowerStateUserMessage   *message,
                      uint8_t             *out);
size_t update_power_state_user_message__pack_to_buffer
                     (const UpdatePowerStateUserMessage   *message,
                      ProtobufCBuffer     *buffer);
UpdatePowerStateUserMessage *
       update_power_state_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_power_state_user_message__free_unpacked
                     (UpdatePowerStateUserMessage *message,
                      ProtobufCAllocator *allocator);
/* UpdateScheduleUserMessage methods */
void   update_schedule_user_message__init
                     (UpdateScheduleUserMessage         *message);
size_t update_schedule_user_message__get_packed_size
                     (const UpdateScheduleUserMessage   *message);
size_t update_schedule_user_message__pack
                     (const UpdateScheduleUserMessage   *message,
                      uint8_t             *out);
size_t update_schedule_user_message__pack_to_buffer
                     (const UpdateScheduleUserMessage   *message,
                      ProtobufCBuffer     *buffer);
UpdateScheduleUserMessage *
       update_schedule_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_schedule_user_message__free_unpacked
                     (UpdateScheduleUserMessage *message,
                      ProtobufCAllocator *allocator);
/* UpdateModeUserMessage methods */
void   update_mode_user_message__init
                     (UpdateModeUserMessage         *message);
size_t update_mode_user_message__get_packed_size
                     (const UpdateModeUserMessage   *message);
size_t update_mode_user_message__pack
                     (const UpdateModeUserMessage   *message,
                      uint8_t             *out);
size_t update_mode_user_message__pack_to_buffer
                     (const UpdateModeUserMessage   *message,
                      ProtobufCBuffer     *buffer);
UpdateModeUserMessage *
       update_mode_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_mode_user_message__free_unpacked
                     (UpdateModeUserMessage *message,
                      ProtobufCAllocator *allocator);
/* DeviceOnchangeUserMessage methods */
void   device_onchange_user_message__init
                     (DeviceOnchangeUserMessage         *message);
size_t device_onchange_user_message__get_packed_size
                     (const DeviceOnchangeUserMessage   *message);
size_t device_onchange_user_message__pack
                     (const DeviceOnchangeUserMessage   *message,
                      uint8_t             *out);
size_t device_onchange_user_message__pack_to_buffer
                     (const DeviceOnchangeUserMessage   *message,
                      ProtobufCBuffer     *buffer);
DeviceOnchangeUserMessage *
       device_onchange_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   device_onchange_user_message__free_unpacked
                     (DeviceOnchangeUserMessage *message,
                      ProtobufCAllocator *allocator);
/* SyncTimeUserRequest methods */
void   sync_time_user_request__init
                     (SyncTimeUserRequest         *message);
size_t sync_time_user_request__get_packed_size
                     (const SyncTimeUserRequest   *message);
size_t sync_time_user_request__pack
                     (const SyncTimeUserRequest   *message,
                      uint8_t             *out);
size_t sync_time_user_request__pack_to_buffer
                     (const SyncTimeUserRequest   *message,
                      ProtobufCBuffer     *buffer);
SyncTimeUserRequest *
       sync_time_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sync_time_user_request__free_unpacked
                     (SyncTimeUserRequest *message,
                      ProtobufCAllocator *allocator);
/* SyncTimeUserResponse methods */
void   sync_time_user_response__init
                     (SyncTimeUserResponse         *message);
size_t sync_time_user_response__get_packed_size
                     (const SyncTimeUserResponse   *message);
size_t sync_time_user_response__pack
                     (const SyncTimeUserResponse   *message,
                      uint8_t             *out);
size_t sync_time_user_response__pack_to_buffer
                     (const SyncTimeUserResponse   *message,
                      ProtobufCBuffer     *buffer);
SyncTimeUserResponse *
       sync_time_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sync_time_user_response__free_unpacked
                     (SyncTimeUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetDeviceUserRequest methods */
void   get_device_user_request__init
                     (GetDeviceUserRequest         *message);
size_t get_device_user_request__get_packed_size
                     (const GetDeviceUserRequest   *message);
size_t get_device_user_request__pack
                     (const GetDeviceUserRequest   *message,
                      uint8_t             *out);
size_t get_device_user_request__pack_to_buffer
                     (const GetDeviceUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetDeviceUserRequest *
       get_device_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_device_user_request__free_unpacked
                     (GetDeviceUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetDeviceUserResponse methods */
void   get_device_user_response__init
                     (GetDeviceUserResponse         *message);
size_t get_device_user_response__get_packed_size
                     (const GetDeviceUserResponse   *message);
size_t get_device_user_response__pack
                     (const GetDeviceUserResponse   *message,
                      uint8_t             *out);
size_t get_device_user_response__pack_to_buffer
                     (const GetDeviceUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetDeviceUserResponse *
       get_device_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_device_user_response__free_unpacked
                     (GetDeviceUserResponse *message,
                      ProtobufCAllocator *allocator);
/* AddStationUserRequest methods */
void   add_station_user_request__init
                     (AddStationUserRequest         *message);
size_t add_station_user_request__get_packed_size
                     (const AddStationUserRequest   *message);
size_t add_station_user_request__pack
                     (const AddStationUserRequest   *message,
                      uint8_t             *out);
size_t add_station_user_request__pack_to_buffer
                     (const AddStationUserRequest   *message,
                      ProtobufCBuffer     *buffer);
AddStationUserRequest *
       add_station_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_station_user_request__free_unpacked
                     (AddStationUserRequest *message,
                      ProtobufCAllocator *allocator);
/* AddStationUserResponse methods */
void   add_station_user_response__init
                     (AddStationUserResponse         *message);
size_t add_station_user_response__get_packed_size
                     (const AddStationUserResponse   *message);
size_t add_station_user_response__pack
                     (const AddStationUserResponse   *message,
                      uint8_t             *out);
size_t add_station_user_response__pack_to_buffer
                     (const AddStationUserResponse   *message,
                      ProtobufCBuffer     *buffer);
AddStationUserResponse *
       add_station_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_station_user_response__free_unpacked
                     (AddStationUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetCoordinateUserRequest methods */
void   get_coordinate_user_request__init
                     (GetCoordinateUserRequest         *message);
size_t get_coordinate_user_request__get_packed_size
                     (const GetCoordinateUserRequest   *message);
size_t get_coordinate_user_request__pack
                     (const GetCoordinateUserRequest   *message,
                      uint8_t             *out);
size_t get_coordinate_user_request__pack_to_buffer
                     (const GetCoordinateUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetCoordinateUserRequest *
       get_coordinate_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_coordinate_user_request__free_unpacked
                     (GetCoordinateUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetCoordinateUserResponse methods */
void   get_coordinate_user_response__init
                     (GetCoordinateUserResponse         *message);
size_t get_coordinate_user_response__get_packed_size
                     (const GetCoordinateUserResponse   *message);
size_t get_coordinate_user_response__pack
                     (const GetCoordinateUserResponse   *message,
                      uint8_t             *out);
size_t get_coordinate_user_response__pack_to_buffer
                     (const GetCoordinateUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetCoordinateUserResponse *
       get_coordinate_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_coordinate_user_response__free_unpacked
                     (GetCoordinateUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetMeterInYearUserRequest methods */
void   get_meter_in_year_user_request__init
                     (GetMeterInYearUserRequest         *message);
size_t get_meter_in_year_user_request__get_packed_size
                     (const GetMeterInYearUserRequest   *message);
size_t get_meter_in_year_user_request__pack
                     (const GetMeterInYearUserRequest   *message,
                      uint8_t             *out);
size_t get_meter_in_year_user_request__pack_to_buffer
                     (const GetMeterInYearUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetMeterInYearUserRequest *
       get_meter_in_year_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_meter_in_year_user_request__free_unpacked
                     (GetMeterInYearUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetMeterInYearUserResponse methods */
void   get_meter_in_year_user_response__init
                     (GetMeterInYearUserResponse         *message);
size_t get_meter_in_year_user_response__get_packed_size
                     (const GetMeterInYearUserResponse   *message);
size_t get_meter_in_year_user_response__pack
                     (const GetMeterInYearUserResponse   *message,
                      uint8_t             *out);
size_t get_meter_in_year_user_response__pack_to_buffer
                     (const GetMeterInYearUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetMeterInYearUserResponse *
       get_meter_in_year_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_meter_in_year_user_response__free_unpacked
                     (GetMeterInYearUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetMeterInMonthUserRequest methods */
void   get_meter_in_month_user_request__init
                     (GetMeterInMonthUserRequest         *message);
size_t get_meter_in_month_user_request__get_packed_size
                     (const GetMeterInMonthUserRequest   *message);
size_t get_meter_in_month_user_request__pack
                     (const GetMeterInMonthUserRequest   *message,
                      uint8_t             *out);
size_t get_meter_in_month_user_request__pack_to_buffer
                     (const GetMeterInMonthUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetMeterInMonthUserRequest *
       get_meter_in_month_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_meter_in_month_user_request__free_unpacked
                     (GetMeterInMonthUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetMeterInMonthUserResponse methods */
void   get_meter_in_month_user_response__init
                     (GetMeterInMonthUserResponse         *message);
size_t get_meter_in_month_user_response__get_packed_size
                     (const GetMeterInMonthUserResponse   *message);
size_t get_meter_in_month_user_response__pack
                     (const GetMeterInMonthUserResponse   *message,
                      uint8_t             *out);
size_t get_meter_in_month_user_response__pack_to_buffer
                     (const GetMeterInMonthUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetMeterInMonthUserResponse *
       get_meter_in_month_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_meter_in_month_user_response__free_unpacked
                     (GetMeterInMonthUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetMeterInDayUserRequest methods */
void   get_meter_in_day_user_request__init
                     (GetMeterInDayUserRequest         *message);
size_t get_meter_in_day_user_request__get_packed_size
                     (const GetMeterInDayUserRequest   *message);
size_t get_meter_in_day_user_request__pack
                     (const GetMeterInDayUserRequest   *message,
                      uint8_t             *out);
size_t get_meter_in_day_user_request__pack_to_buffer
                     (const GetMeterInDayUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetMeterInDayUserRequest *
       get_meter_in_day_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_meter_in_day_user_request__free_unpacked
                     (GetMeterInDayUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetMeterInDayUserResponse methods */
void   get_meter_in_day_user_response__init
                     (GetMeterInDayUserResponse         *message);
size_t get_meter_in_day_user_response__get_packed_size
                     (const GetMeterInDayUserResponse   *message);
size_t get_meter_in_day_user_response__pack
                     (const GetMeterInDayUserResponse   *message,
                      uint8_t             *out);
size_t get_meter_in_day_user_response__pack_to_buffer
                     (const GetMeterInDayUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetMeterInDayUserResponse *
       get_meter_in_day_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_meter_in_day_user_response__free_unpacked
                     (GetMeterInDayUserResponse *message,
                      ProtobufCAllocator *allocator);
/* DeviceUserMessage methods */
void   device_user_message__init
                     (DeviceUserMessage         *message);
size_t device_user_message__get_packed_size
                     (const DeviceUserMessage   *message);
size_t device_user_message__pack
                     (const DeviceUserMessage   *message,
                      uint8_t             *out);
size_t device_user_message__pack_to_buffer
                     (const DeviceUserMessage   *message,
                      ProtobufCBuffer     *buffer);
DeviceUserMessage *
       device_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   device_user_message__free_unpacked
                     (DeviceUserMessage *message,
                      ProtobufCAllocator *allocator);
/* GetStationUserRequest methods */
void   get_station_user_request__init
                     (GetStationUserRequest         *message);
size_t get_station_user_request__get_packed_size
                     (const GetStationUserRequest   *message);
size_t get_station_user_request__pack
                     (const GetStationUserRequest   *message,
                      uint8_t             *out);
size_t get_station_user_request__pack_to_buffer
                     (const GetStationUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetStationUserRequest *
       get_station_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_station_user_request__free_unpacked
                     (GetStationUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetStationUserResponse methods */
void   get_station_user_response__init
                     (GetStationUserResponse         *message);
size_t get_station_user_response__get_packed_size
                     (const GetStationUserResponse   *message);
size_t get_station_user_response__pack
                     (const GetStationUserResponse   *message,
                      uint8_t             *out);
size_t get_station_user_response__pack_to_buffer
                     (const GetStationUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetStationUserResponse *
       get_station_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_station_user_response__free_unpacked
                     (GetStationUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetStationListUserRequest methods */
void   get_station_list_user_request__init
                     (GetStationListUserRequest         *message);
size_t get_station_list_user_request__get_packed_size
                     (const GetStationListUserRequest   *message);
size_t get_station_list_user_request__pack
                     (const GetStationListUserRequest   *message,
                      uint8_t             *out);
size_t get_station_list_user_request__pack_to_buffer
                     (const GetStationListUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetStationListUserRequest *
       get_station_list_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_station_list_user_request__free_unpacked
                     (GetStationListUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetStationListUserResponse methods */
void   get_station_list_user_response__init
                     (GetStationListUserResponse         *message);
size_t get_station_list_user_response__get_packed_size
                     (const GetStationListUserResponse   *message);
size_t get_station_list_user_response__pack
                     (const GetStationListUserResponse   *message,
                      uint8_t             *out);
size_t get_station_list_user_response__pack_to_buffer
                     (const GetStationListUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetStationListUserResponse *
       get_station_list_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_station_list_user_response__free_unpacked
                     (GetStationListUserResponse *message,
                      ProtobufCAllocator *allocator);
/* SetSignSettingUserRequest methods */
void   set_sign_setting_user_request__init
                     (SetSignSettingUserRequest         *message);
size_t set_sign_setting_user_request__get_packed_size
                     (const SetSignSettingUserRequest   *message);
size_t set_sign_setting_user_request__pack
                     (const SetSignSettingUserRequest   *message,
                      uint8_t             *out);
size_t set_sign_setting_user_request__pack_to_buffer
                     (const SetSignSettingUserRequest   *message,
                      ProtobufCBuffer     *buffer);
SetSignSettingUserRequest *
       set_sign_setting_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_sign_setting_user_request__free_unpacked
                     (SetSignSettingUserRequest *message,
                      ProtobufCAllocator *allocator);
/* SetSignSettingUserResponse methods */
void   set_sign_setting_user_response__init
                     (SetSignSettingUserResponse         *message);
size_t set_sign_setting_user_response__get_packed_size
                     (const SetSignSettingUserResponse   *message);
size_t set_sign_setting_user_response__pack
                     (const SetSignSettingUserResponse   *message,
                      uint8_t             *out);
size_t set_sign_setting_user_response__pack_to_buffer
                     (const SetSignSettingUserResponse   *message,
                      ProtobufCBuffer     *buffer);
SetSignSettingUserResponse *
       set_sign_setting_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_sign_setting_user_response__free_unpacked
                     (SetSignSettingUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetLatestFirmwareUserRequest methods */
void   get_latest_firmware_user_request__init
                     (GetLatestFirmwareUserRequest         *message);
size_t get_latest_firmware_user_request__get_packed_size
                     (const GetLatestFirmwareUserRequest   *message);
size_t get_latest_firmware_user_request__pack
                     (const GetLatestFirmwareUserRequest   *message,
                      uint8_t             *out);
size_t get_latest_firmware_user_request__pack_to_buffer
                     (const GetLatestFirmwareUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetLatestFirmwareUserRequest *
       get_latest_firmware_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_latest_firmware_user_request__free_unpacked
                     (GetLatestFirmwareUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetLatestFirmwareUserResponse methods */
void   get_latest_firmware_user_response__init
                     (GetLatestFirmwareUserResponse         *message);
size_t get_latest_firmware_user_response__get_packed_size
                     (const GetLatestFirmwareUserResponse   *message);
size_t get_latest_firmware_user_response__pack
                     (const GetLatestFirmwareUserResponse   *message,
                      uint8_t             *out);
size_t get_latest_firmware_user_response__pack_to_buffer
                     (const GetLatestFirmwareUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetLatestFirmwareUserResponse *
       get_latest_firmware_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_latest_firmware_user_response__free_unpacked
                     (GetLatestFirmwareUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetLogFileUserRequest methods */
void   get_log_file_user_request__init
                     (GetLogFileUserRequest         *message);
size_t get_log_file_user_request__get_packed_size
                     (const GetLogFileUserRequest   *message);
size_t get_log_file_user_request__pack
                     (const GetLogFileUserRequest   *message,
                      uint8_t             *out);
size_t get_log_file_user_request__pack_to_buffer
                     (const GetLogFileUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetLogFileUserRequest *
       get_log_file_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_log_file_user_request__free_unpacked
                     (GetLogFileUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetLogFileUserResponse methods */
void   get_log_file_user_response__init
                     (GetLogFileUserResponse         *message);
size_t get_log_file_user_response__get_packed_size
                     (const GetLogFileUserResponse   *message);
size_t get_log_file_user_response__pack
                     (const GetLogFileUserResponse   *message,
                      uint8_t             *out);
size_t get_log_file_user_response__pack_to_buffer
                     (const GetLogFileUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetLogFileUserResponse *
       get_log_file_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_log_file_user_response__free_unpacked
                     (GetLogFileUserResponse *message,
                      ProtobufCAllocator *allocator);
/* DeleteStationUserRequest methods */
void   delete_station_user_request__init
                     (DeleteStationUserRequest         *message);
size_t delete_station_user_request__get_packed_size
                     (const DeleteStationUserRequest   *message);
size_t delete_station_user_request__pack
                     (const DeleteStationUserRequest   *message,
                      uint8_t             *out);
size_t delete_station_user_request__pack_to_buffer
                     (const DeleteStationUserRequest   *message,
                      ProtobufCBuffer     *buffer);
DeleteStationUserRequest *
       delete_station_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_station_user_request__free_unpacked
                     (DeleteStationUserRequest *message,
                      ProtobufCAllocator *allocator);
/* DeleteStationUserResponse methods */
void   delete_station_user_response__init
                     (DeleteStationUserResponse         *message);
size_t delete_station_user_response__get_packed_size
                     (const DeleteStationUserResponse   *message);
size_t delete_station_user_response__pack
                     (const DeleteStationUserResponse   *message,
                      uint8_t             *out);
size_t delete_station_user_response__pack_to_buffer
                     (const DeleteStationUserResponse   *message,
                      ProtobufCBuffer     *buffer);
DeleteStationUserResponse *
       delete_station_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_station_user_response__free_unpacked
                     (DeleteStationUserResponse *message,
                      ProtobufCAllocator *allocator);
/* EditNumberCardUserRequest methods */
void   edit_number_card_user_request__init
                     (EditNumberCardUserRequest         *message);
size_t edit_number_card_user_request__get_packed_size
                     (const EditNumberCardUserRequest   *message);
size_t edit_number_card_user_request__pack
                     (const EditNumberCardUserRequest   *message,
                      uint8_t             *out);
size_t edit_number_card_user_request__pack_to_buffer
                     (const EditNumberCardUserRequest   *message,
                      ProtobufCBuffer     *buffer);
EditNumberCardUserRequest *
       edit_number_card_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   edit_number_card_user_request__free_unpacked
                     (EditNumberCardUserRequest *message,
                      ProtobufCAllocator *allocator);
/* EditNumberCardUserResponse methods */
void   edit_number_card_user_response__init
                     (EditNumberCardUserResponse         *message);
size_t edit_number_card_user_response__get_packed_size
                     (const EditNumberCardUserResponse   *message);
size_t edit_number_card_user_response__pack
                     (const EditNumberCardUserResponse   *message,
                      uint8_t             *out);
size_t edit_number_card_user_response__pack_to_buffer
                     (const EditNumberCardUserResponse   *message,
                      ProtobufCBuffer     *buffer);
EditNumberCardUserResponse *
       edit_number_card_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   edit_number_card_user_response__free_unpacked
                     (EditNumberCardUserResponse *message,
                      ProtobufCAllocator *allocator);
/* UpdateErrorHandlingUserRequest methods */
void   update_error_handling_user_request__init
                     (UpdateErrorHandlingUserRequest         *message);
size_t update_error_handling_user_request__get_packed_size
                     (const UpdateErrorHandlingUserRequest   *message);
size_t update_error_handling_user_request__pack
                     (const UpdateErrorHandlingUserRequest   *message,
                      uint8_t             *out);
size_t update_error_handling_user_request__pack_to_buffer
                     (const UpdateErrorHandlingUserRequest   *message,
                      ProtobufCBuffer     *buffer);
UpdateErrorHandlingUserRequest *
       update_error_handling_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_error_handling_user_request__free_unpacked
                     (UpdateErrorHandlingUserRequest *message,
                      ProtobufCAllocator *allocator);
/* UpdateDiaryLogUserRequest methods */
void   update_diary_log_user_request__init
                     (UpdateDiaryLogUserRequest         *message);
size_t update_diary_log_user_request__get_packed_size
                     (const UpdateDiaryLogUserRequest   *message);
size_t update_diary_log_user_request__pack
                     (const UpdateDiaryLogUserRequest   *message,
                      uint8_t             *out);
size_t update_diary_log_user_request__pack_to_buffer
                     (const UpdateDiaryLogUserRequest   *message,
                      ProtobufCBuffer     *buffer);
UpdateDiaryLogUserRequest *
       update_diary_log_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_diary_log_user_request__free_unpacked
                     (UpdateDiaryLogUserRequest *message,
                      ProtobufCAllocator *allocator);
/* UpdateDiaryLogUserResponse methods */
void   update_diary_log_user_response__init
                     (UpdateDiaryLogUserResponse         *message);
size_t update_diary_log_user_response__get_packed_size
                     (const UpdateDiaryLogUserResponse   *message);
size_t update_diary_log_user_response__pack
                     (const UpdateDiaryLogUserResponse   *message,
                      uint8_t             *out);
size_t update_diary_log_user_response__pack_to_buffer
                     (const UpdateDiaryLogUserResponse   *message,
                      ProtobufCBuffer     *buffer);
UpdateDiaryLogUserResponse *
       update_diary_log_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_diary_log_user_response__free_unpacked
                     (UpdateDiaryLogUserResponse *message,
                      ProtobufCAllocator *allocator);
/* InsertAccessoryUserRequest methods */
void   insert_accessory_user_request__init
                     (InsertAccessoryUserRequest         *message);
size_t insert_accessory_user_request__get_packed_size
                     (const InsertAccessoryUserRequest   *message);
size_t insert_accessory_user_request__pack
                     (const InsertAccessoryUserRequest   *message,
                      uint8_t             *out);
size_t insert_accessory_user_request__pack_to_buffer
                     (const InsertAccessoryUserRequest   *message,
                      ProtobufCBuffer     *buffer);
InsertAccessoryUserRequest *
       insert_accessory_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   insert_accessory_user_request__free_unpacked
                     (InsertAccessoryUserRequest *message,
                      ProtobufCAllocator *allocator);
/* InsertAccessoryUserResponse methods */
void   insert_accessory_user_response__init
                     (InsertAccessoryUserResponse         *message);
size_t insert_accessory_user_response__get_packed_size
                     (const InsertAccessoryUserResponse   *message);
size_t insert_accessory_user_response__pack
                     (const InsertAccessoryUserResponse   *message,
                      uint8_t             *out);
size_t insert_accessory_user_response__pack_to_buffer
                     (const InsertAccessoryUserResponse   *message,
                      ProtobufCBuffer     *buffer);
InsertAccessoryUserResponse *
       insert_accessory_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   insert_accessory_user_response__free_unpacked
                     (InsertAccessoryUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetAccessoriesUserRequest methods */
void   get_accessories_user_request__init
                     (GetAccessoriesUserRequest         *message);
size_t get_accessories_user_request__get_packed_size
                     (const GetAccessoriesUserRequest   *message);
size_t get_accessories_user_request__pack
                     (const GetAccessoriesUserRequest   *message,
                      uint8_t             *out);
size_t get_accessories_user_request__pack_to_buffer
                     (const GetAccessoriesUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetAccessoriesUserRequest *
       get_accessories_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_accessories_user_request__free_unpacked
                     (GetAccessoriesUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetAccessoriesUserResponse methods */
void   get_accessories_user_response__init
                     (GetAccessoriesUserResponse         *message);
size_t get_accessories_user_response__get_packed_size
                     (const GetAccessoriesUserResponse   *message);
size_t get_accessories_user_response__pack
                     (const GetAccessoriesUserResponse   *message,
                      uint8_t             *out);
size_t get_accessories_user_response__pack_to_buffer
                     (const GetAccessoriesUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetAccessoriesUserResponse *
       get_accessories_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_accessories_user_response__free_unpacked
                     (GetAccessoriesUserResponse *message,
                      ProtobufCAllocator *allocator);
/* DeleteAccessoryUserRequest methods */
void   delete_accessory_user_request__init
                     (DeleteAccessoryUserRequest         *message);
size_t delete_accessory_user_request__get_packed_size
                     (const DeleteAccessoryUserRequest   *message);
size_t delete_accessory_user_request__pack
                     (const DeleteAccessoryUserRequest   *message,
                      uint8_t             *out);
size_t delete_accessory_user_request__pack_to_buffer
                     (const DeleteAccessoryUserRequest   *message,
                      ProtobufCBuffer     *buffer);
DeleteAccessoryUserRequest *
       delete_accessory_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_accessory_user_request__free_unpacked
                     (DeleteAccessoryUserRequest *message,
                      ProtobufCAllocator *allocator);
/* DeleteAccessoryUserResponse methods */
void   delete_accessory_user_response__init
                     (DeleteAccessoryUserResponse         *message);
size_t delete_accessory_user_response__get_packed_size
                     (const DeleteAccessoryUserResponse   *message);
size_t delete_accessory_user_response__pack
                     (const DeleteAccessoryUserResponse   *message,
                      uint8_t             *out);
size_t delete_accessory_user_response__pack_to_buffer
                     (const DeleteAccessoryUserResponse   *message,
                      ProtobufCBuffer     *buffer);
DeleteAccessoryUserResponse *
       delete_accessory_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_accessory_user_response__free_unpacked
                     (DeleteAccessoryUserResponse *message,
                      ProtobufCAllocator *allocator);
/* EditAccessoryUserRequest methods */
void   edit_accessory_user_request__init
                     (EditAccessoryUserRequest         *message);
size_t edit_accessory_user_request__get_packed_size
                     (const EditAccessoryUserRequest   *message);
size_t edit_accessory_user_request__pack
                     (const EditAccessoryUserRequest   *message,
                      uint8_t             *out);
size_t edit_accessory_user_request__pack_to_buffer
                     (const EditAccessoryUserRequest   *message,
                      ProtobufCBuffer     *buffer);
EditAccessoryUserRequest *
       edit_accessory_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   edit_accessory_user_request__free_unpacked
                     (EditAccessoryUserRequest *message,
                      ProtobufCAllocator *allocator);
/* EditAccessoryUserResponse methods */
void   edit_accessory_user_response__init
                     (EditAccessoryUserResponse         *message);
size_t edit_accessory_user_response__get_packed_size
                     (const EditAccessoryUserResponse   *message);
size_t edit_accessory_user_response__pack
                     (const EditAccessoryUserResponse   *message,
                      uint8_t             *out);
size_t edit_accessory_user_response__pack_to_buffer
                     (const EditAccessoryUserResponse   *message,
                      ProtobufCBuffer     *buffer);
EditAccessoryUserResponse *
       edit_accessory_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   edit_accessory_user_response__free_unpacked
                     (EditAccessoryUserResponse *message,
                      ProtobufCAllocator *allocator);
/* UpdateScheduleUserRequest methods */
void   update_schedule_user_request__init
                     (UpdateScheduleUserRequest         *message);
size_t update_schedule_user_request__get_packed_size
                     (const UpdateScheduleUserRequest   *message);
size_t update_schedule_user_request__pack
                     (const UpdateScheduleUserRequest   *message,
                      uint8_t             *out);
size_t update_schedule_user_request__pack_to_buffer
                     (const UpdateScheduleUserRequest   *message,
                      ProtobufCBuffer     *buffer);
UpdateScheduleUserRequest *
       update_schedule_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_schedule_user_request__free_unpacked
                     (UpdateScheduleUserRequest *message,
                      ProtobufCAllocator *allocator);
/* UpdateScheduleUserResponse methods */
void   update_schedule_user_response__init
                     (UpdateScheduleUserResponse         *message);
size_t update_schedule_user_response__get_packed_size
                     (const UpdateScheduleUserResponse   *message);
size_t update_schedule_user_response__pack
                     (const UpdateScheduleUserResponse   *message,
                      uint8_t             *out);
size_t update_schedule_user_response__pack_to_buffer
                     (const UpdateScheduleUserResponse   *message,
                      ProtobufCBuffer     *buffer);
UpdateScheduleUserResponse *
       update_schedule_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_schedule_user_response__free_unpacked
                     (UpdateScheduleUserResponse *message,
                      ProtobufCAllocator *allocator);
/* GetScheduleUserRequest methods */
void   get_schedule_user_request__init
                     (GetScheduleUserRequest         *message);
size_t get_schedule_user_request__get_packed_size
                     (const GetScheduleUserRequest   *message);
size_t get_schedule_user_request__pack
                     (const GetScheduleUserRequest   *message,
                      uint8_t             *out);
size_t get_schedule_user_request__pack_to_buffer
                     (const GetScheduleUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetScheduleUserRequest *
       get_schedule_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_schedule_user_request__free_unpacked
                     (GetScheduleUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetScheduleUserResponse methods */
void   get_schedule_user_response__init
                     (GetScheduleUserResponse         *message);
size_t get_schedule_user_response__get_packed_size
                     (const GetScheduleUserResponse   *message);
size_t get_schedule_user_response__pack
                     (const GetScheduleUserResponse   *message,
                      uint8_t             *out);
size_t get_schedule_user_response__pack_to_buffer
                     (const GetScheduleUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetScheduleUserResponse *
       get_schedule_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_schedule_user_response__free_unpacked
                     (GetScheduleUserResponse *message,
                      ProtobufCAllocator *allocator);
/* StationUserMessage methods */
void   station_user_message__init
                     (StationUserMessage         *message);
size_t station_user_message__get_packed_size
                     (const StationUserMessage   *message);
size_t station_user_message__pack
                     (const StationUserMessage   *message,
                      uint8_t             *out);
size_t station_user_message__pack_to_buffer
                     (const StationUserMessage   *message,
                      ProtobufCBuffer     *buffer);
StationUserMessage *
       station_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   station_user_message__free_unpacked
                     (StationUserMessage *message,
                      ProtobufCAllocator *allocator);
/* GetAccountsUserRequest methods */
void   get_accounts_user_request__init
                     (GetAccountsUserRequest         *message);
size_t get_accounts_user_request__get_packed_size
                     (const GetAccountsUserRequest   *message);
size_t get_accounts_user_request__pack
                     (const GetAccountsUserRequest   *message,
                      uint8_t             *out);
size_t get_accounts_user_request__pack_to_buffer
                     (const GetAccountsUserRequest   *message,
                      ProtobufCBuffer     *buffer);
GetAccountsUserRequest *
       get_accounts_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_accounts_user_request__free_unpacked
                     (GetAccountsUserRequest *message,
                      ProtobufCAllocator *allocator);
/* GetAccountsUserResponse methods */
void   get_accounts_user_response__init
                     (GetAccountsUserResponse         *message);
size_t get_accounts_user_response__get_packed_size
                     (const GetAccountsUserResponse   *message);
size_t get_accounts_user_response__pack
                     (const GetAccountsUserResponse   *message,
                      uint8_t             *out);
size_t get_accounts_user_response__pack_to_buffer
                     (const GetAccountsUserResponse   *message,
                      ProtobufCBuffer     *buffer);
GetAccountsUserResponse *
       get_accounts_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_accounts_user_response__free_unpacked
                     (GetAccountsUserResponse *message,
                      ProtobufCAllocator *allocator);
/* DeleteAccountUserRequest methods */
void   delete_account_user_request__init
                     (DeleteAccountUserRequest         *message);
size_t delete_account_user_request__get_packed_size
                     (const DeleteAccountUserRequest   *message);
size_t delete_account_user_request__pack
                     (const DeleteAccountUserRequest   *message,
                      uint8_t             *out);
size_t delete_account_user_request__pack_to_buffer
                     (const DeleteAccountUserRequest   *message,
                      ProtobufCBuffer     *buffer);
DeleteAccountUserRequest *
       delete_account_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_account_user_request__free_unpacked
                     (DeleteAccountUserRequest *message,
                      ProtobufCAllocator *allocator);
/* DeleteAccountUserResponse methods */
void   delete_account_user_response__init
                     (DeleteAccountUserResponse         *message);
size_t delete_account_user_response__get_packed_size
                     (const DeleteAccountUserResponse   *message);
size_t delete_account_user_response__pack
                     (const DeleteAccountUserResponse   *message,
                      uint8_t             *out);
size_t delete_account_user_response__pack_to_buffer
                     (const DeleteAccountUserResponse   *message,
                      ProtobufCBuffer     *buffer);
DeleteAccountUserResponse *
       delete_account_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_account_user_response__free_unpacked
                     (DeleteAccountUserResponse *message,
                      ProtobufCAllocator *allocator);
/* CreateNewAccountUserRequest methods */
void   create_new_account_user_request__init
                     (CreateNewAccountUserRequest         *message);
size_t create_new_account_user_request__get_packed_size
                     (const CreateNewAccountUserRequest   *message);
size_t create_new_account_user_request__pack
                     (const CreateNewAccountUserRequest   *message,
                      uint8_t             *out);
size_t create_new_account_user_request__pack_to_buffer
                     (const CreateNewAccountUserRequest   *message,
                      ProtobufCBuffer     *buffer);
CreateNewAccountUserRequest *
       create_new_account_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   create_new_account_user_request__free_unpacked
                     (CreateNewAccountUserRequest *message,
                      ProtobufCAllocator *allocator);
/* CreateNewAccountUserResponse methods */
void   create_new_account_user_response__init
                     (CreateNewAccountUserResponse         *message);
size_t create_new_account_user_response__get_packed_size
                     (const CreateNewAccountUserResponse   *message);
size_t create_new_account_user_response__pack
                     (const CreateNewAccountUserResponse   *message,
                      uint8_t             *out);
size_t create_new_account_user_response__pack_to_buffer
                     (const CreateNewAccountUserResponse   *message,
                      ProtobufCBuffer     *buffer);
CreateNewAccountUserResponse *
       create_new_account_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   create_new_account_user_response__free_unpacked
                     (CreateNewAccountUserResponse *message,
                      ProtobufCAllocator *allocator);
/* ChangePasswordUserRequest methods */
void   change_password_user_request__init
                     (ChangePasswordUserRequest         *message);
size_t change_password_user_request__get_packed_size
                     (const ChangePasswordUserRequest   *message);
size_t change_password_user_request__pack
                     (const ChangePasswordUserRequest   *message,
                      uint8_t             *out);
size_t change_password_user_request__pack_to_buffer
                     (const ChangePasswordUserRequest   *message,
                      ProtobufCBuffer     *buffer);
ChangePasswordUserRequest *
       change_password_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   change_password_user_request__free_unpacked
                     (ChangePasswordUserRequest *message,
                      ProtobufCAllocator *allocator);
/* ChangePasswordUserResponse methods */
void   change_password_user_response__init
                     (ChangePasswordUserResponse         *message);
size_t change_password_user_response__get_packed_size
                     (const ChangePasswordUserResponse   *message);
size_t change_password_user_response__pack
                     (const ChangePasswordUserResponse   *message,
                      uint8_t             *out);
size_t change_password_user_response__pack_to_buffer
                     (const ChangePasswordUserResponse   *message,
                      ProtobufCBuffer     *buffer);
ChangePasswordUserResponse *
       change_password_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   change_password_user_response__free_unpacked
                     (ChangePasswordUserResponse *message,
                      ProtobufCAllocator *allocator);
/* UpdateAlertInfoUserRequest methods */
void   update_alert_info_user_request__init
                     (UpdateAlertInfoUserRequest         *message);
size_t update_alert_info_user_request__get_packed_size
                     (const UpdateAlertInfoUserRequest   *message);
size_t update_alert_info_user_request__pack
                     (const UpdateAlertInfoUserRequest   *message,
                      uint8_t             *out);
size_t update_alert_info_user_request__pack_to_buffer
                     (const UpdateAlertInfoUserRequest   *message,
                      ProtobufCBuffer     *buffer);
UpdateAlertInfoUserRequest *
       update_alert_info_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_alert_info_user_request__free_unpacked
                     (UpdateAlertInfoUserRequest *message,
                      ProtobufCAllocator *allocator);
/* UpdateAlertInfoUserResponse methods */
void   update_alert_info_user_response__init
                     (UpdateAlertInfoUserResponse         *message);
size_t update_alert_info_user_response__get_packed_size
                     (const UpdateAlertInfoUserResponse   *message);
size_t update_alert_info_user_response__pack
                     (const UpdateAlertInfoUserResponse   *message,
                      uint8_t             *out);
size_t update_alert_info_user_response__pack_to_buffer
                     (const UpdateAlertInfoUserResponse   *message,
                      ProtobufCBuffer     *buffer);
UpdateAlertInfoUserResponse *
       update_alert_info_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_alert_info_user_response__free_unpacked
                     (UpdateAlertInfoUserResponse *message,
                      ProtobufCAllocator *allocator);
/* AccountUserMessage methods */
void   account_user_message__init
                     (AccountUserMessage         *message);
size_t account_user_message__get_packed_size
                     (const AccountUserMessage   *message);
size_t account_user_message__pack
                     (const AccountUserMessage   *message,
                      uint8_t             *out);
size_t account_user_message__pack_to_buffer
                     (const AccountUserMessage   *message,
                      ProtobufCBuffer     *buffer);
AccountUserMessage *
       account_user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   account_user_message__free_unpacked
                     (AccountUserMessage *message,
                      ProtobufCAllocator *allocator);
/* UserMessage methods */
void   user_message__init
                     (UserMessage         *message);
size_t user_message__get_packed_size
                     (const UserMessage   *message);
size_t user_message__pack
                     (const UserMessage   *message,
                      uint8_t             *out);
size_t user_message__pack_to_buffer
                     (const UserMessage   *message,
                      ProtobufCBuffer     *buffer);
UserMessage *
       user_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_message__free_unpacked
                     (UserMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ChannelState_Closure)
                 (const ChannelState *message,
                  void *closure_data);
typedef void (*DeviceStateModel_Closure)
                 (const DeviceStateModel *message,
                  void *closure_data);
typedef void (*UserLoginRequest_Closure)
                 (const UserLoginRequest *message,
                  void *closure_data);
typedef void (*UserLoginResponse_Closure)
                 (const UserLoginResponse *message,
                  void *closure_data);
typedef void (*GetAccessTokenUserRequest_Closure)
                 (const GetAccessTokenUserRequest *message,
                  void *closure_data);
typedef void (*GetAccessTokenUserResponse_Closure)
                 (const GetAccessTokenUserResponse *message,
                  void *closure_data);
typedef void (*AuthUserMessage_Closure)
                 (const AuthUserMessage *message,
                  void *closure_data);
typedef void (*RequireStreamUserRequest_Closure)
                 (const RequireStreamUserRequest *message,
                  void *closure_data);
typedef void (*RequireStreamUserResponse_Closure)
                 (const RequireStreamUserResponse *message,
                  void *closure_data);
typedef void (*ControlLaneUserRequest_Closure)
                 (const ControlLaneUserRequest *message,
                  void *closure_data);
typedef void (*ControlLaneUserResponse_Closure)
                 (const ControlLaneUserResponse *message,
                  void *closure_data);
typedef void (*SetActiveTimeUserRequest_Closure)
                 (const SetActiveTimeUserRequest *message,
                  void *closure_data);
typedef void (*SetActiveTimeUserResponse_Closure)
                 (const SetActiveTimeUserResponse *message,
                  void *closure_data);
typedef void (*SetCycleConfigUserRequest_Closure)
                 (const SetCycleConfigUserRequest *message,
                  void *closure_data);
typedef void (*SetCycleConfigUserResponse_Closure)
                 (const SetCycleConfigUserResponse *message,
                  void *closure_data);
typedef void (*SetCoordinateUserRequest_Closure)
                 (const SetCoordinateUserRequest *message,
                  void *closure_data);
typedef void (*SetCoordinateUserResponse_Closure)
                 (const SetCoordinateUserResponse *message,
                  void *closure_data);
typedef void (*DeviceControlUserRequest_Closure)
                 (const DeviceControlUserRequest *message,
                  void *closure_data);
typedef void (*DeviceControlUserResponse_Closure)
                 (const DeviceControlUserResponse *message,
                  void *closure_data);
typedef void (*StateOnChangeUserMessage_Closure)
                 (const StateOnChangeUserMessage *message,
                  void *closure_data);
typedef void (*UpdateDeviceConnectionState_Closure)
                 (const UpdateDeviceConnectionState *message,
                  void *closure_data);
typedef void (*LogUpdateUserMessage_Closure)
                 (const LogUpdateUserMessage *message,
                  void *closure_data);
typedef void (*ErrorStatusUserMessage_Closure)
                 (const ErrorStatusUserMessage *message,
                  void *closure_data);
typedef void (*UpdatePowerStateUserMessage_Closure)
                 (const UpdatePowerStateUserMessage *message,
                  void *closure_data);
typedef void (*UpdateScheduleUserMessage_Closure)
                 (const UpdateScheduleUserMessage *message,
                  void *closure_data);
typedef void (*UpdateModeUserMessage_Closure)
                 (const UpdateModeUserMessage *message,
                  void *closure_data);
typedef void (*DeviceOnchangeUserMessage_Closure)
                 (const DeviceOnchangeUserMessage *message,
                  void *closure_data);
typedef void (*SyncTimeUserRequest_Closure)
                 (const SyncTimeUserRequest *message,
                  void *closure_data);
typedef void (*SyncTimeUserResponse_Closure)
                 (const SyncTimeUserResponse *message,
                  void *closure_data);
typedef void (*GetDeviceUserRequest_Closure)
                 (const GetDeviceUserRequest *message,
                  void *closure_data);
typedef void (*GetDeviceUserResponse_Closure)
                 (const GetDeviceUserResponse *message,
                  void *closure_data);
typedef void (*AddStationUserRequest_Closure)
                 (const AddStationUserRequest *message,
                  void *closure_data);
typedef void (*AddStationUserResponse_Closure)
                 (const AddStationUserResponse *message,
                  void *closure_data);
typedef void (*GetCoordinateUserRequest_Closure)
                 (const GetCoordinateUserRequest *message,
                  void *closure_data);
typedef void (*GetCoordinateUserResponse_Closure)
                 (const GetCoordinateUserResponse *message,
                  void *closure_data);
typedef void (*GetMeterInYearUserRequest_Closure)
                 (const GetMeterInYearUserRequest *message,
                  void *closure_data);
typedef void (*GetMeterInYearUserResponse_Closure)
                 (const GetMeterInYearUserResponse *message,
                  void *closure_data);
typedef void (*GetMeterInMonthUserRequest_Closure)
                 (const GetMeterInMonthUserRequest *message,
                  void *closure_data);
typedef void (*GetMeterInMonthUserResponse_Closure)
                 (const GetMeterInMonthUserResponse *message,
                  void *closure_data);
typedef void (*GetMeterInDayUserRequest_Closure)
                 (const GetMeterInDayUserRequest *message,
                  void *closure_data);
typedef void (*GetMeterInDayUserResponse_Closure)
                 (const GetMeterInDayUserResponse *message,
                  void *closure_data);
typedef void (*DeviceUserMessage_Closure)
                 (const DeviceUserMessage *message,
                  void *closure_data);
typedef void (*GetStationUserRequest_Closure)
                 (const GetStationUserRequest *message,
                  void *closure_data);
typedef void (*GetStationUserResponse_Closure)
                 (const GetStationUserResponse *message,
                  void *closure_data);
typedef void (*GetStationListUserRequest_Closure)
                 (const GetStationListUserRequest *message,
                  void *closure_data);
typedef void (*GetStationListUserResponse_Closure)
                 (const GetStationListUserResponse *message,
                  void *closure_data);
typedef void (*SetSignSettingUserRequest_Closure)
                 (const SetSignSettingUserRequest *message,
                  void *closure_data);
typedef void (*SetSignSettingUserResponse_Closure)
                 (const SetSignSettingUserResponse *message,
                  void *closure_data);
typedef void (*GetLatestFirmwareUserRequest_Closure)
                 (const GetLatestFirmwareUserRequest *message,
                  void *closure_data);
typedef void (*GetLatestFirmwareUserResponse_Closure)
                 (const GetLatestFirmwareUserResponse *message,
                  void *closure_data);
typedef void (*GetLogFileUserRequest_Closure)
                 (const GetLogFileUserRequest *message,
                  void *closure_data);
typedef void (*GetLogFileUserResponse_Closure)
                 (const GetLogFileUserResponse *message,
                  void *closure_data);
typedef void (*DeleteStationUserRequest_Closure)
                 (const DeleteStationUserRequest *message,
                  void *closure_data);
typedef void (*DeleteStationUserResponse_Closure)
                 (const DeleteStationUserResponse *message,
                  void *closure_data);
typedef void (*EditNumberCardUserRequest_Closure)
                 (const EditNumberCardUserRequest *message,
                  void *closure_data);
typedef void (*EditNumberCardUserResponse_Closure)
                 (const EditNumberCardUserResponse *message,
                  void *closure_data);
typedef void (*UpdateErrorHandlingUserRequest_Closure)
                 (const UpdateErrorHandlingUserRequest *message,
                  void *closure_data);
typedef void (*UpdateDiaryLogUserRequest_Closure)
                 (const UpdateDiaryLogUserRequest *message,
                  void *closure_data);
typedef void (*UpdateDiaryLogUserResponse_Closure)
                 (const UpdateDiaryLogUserResponse *message,
                  void *closure_data);
typedef void (*InsertAccessoryUserRequest_Closure)
                 (const InsertAccessoryUserRequest *message,
                  void *closure_data);
typedef void (*InsertAccessoryUserResponse_Closure)
                 (const InsertAccessoryUserResponse *message,
                  void *closure_data);
typedef void (*GetAccessoriesUserRequest_Closure)
                 (const GetAccessoriesUserRequest *message,
                  void *closure_data);
typedef void (*GetAccessoriesUserResponse_Closure)
                 (const GetAccessoriesUserResponse *message,
                  void *closure_data);
typedef void (*DeleteAccessoryUserRequest_Closure)
                 (const DeleteAccessoryUserRequest *message,
                  void *closure_data);
typedef void (*DeleteAccessoryUserResponse_Closure)
                 (const DeleteAccessoryUserResponse *message,
                  void *closure_data);
typedef void (*EditAccessoryUserRequest_Closure)
                 (const EditAccessoryUserRequest *message,
                  void *closure_data);
typedef void (*EditAccessoryUserResponse_Closure)
                 (const EditAccessoryUserResponse *message,
                  void *closure_data);
typedef void (*UpdateScheduleUserRequest_Closure)
                 (const UpdateScheduleUserRequest *message,
                  void *closure_data);
typedef void (*UpdateScheduleUserResponse_Closure)
                 (const UpdateScheduleUserResponse *message,
                  void *closure_data);
typedef void (*GetScheduleUserRequest_Closure)
                 (const GetScheduleUserRequest *message,
                  void *closure_data);
typedef void (*GetScheduleUserResponse_Closure)
                 (const GetScheduleUserResponse *message,
                  void *closure_data);
typedef void (*StationUserMessage_Closure)
                 (const StationUserMessage *message,
                  void *closure_data);
typedef void (*GetAccountsUserRequest_Closure)
                 (const GetAccountsUserRequest *message,
                  void *closure_data);
typedef void (*GetAccountsUserResponse_Closure)
                 (const GetAccountsUserResponse *message,
                  void *closure_data);
typedef void (*DeleteAccountUserRequest_Closure)
                 (const DeleteAccountUserRequest *message,
                  void *closure_data);
typedef void (*DeleteAccountUserResponse_Closure)
                 (const DeleteAccountUserResponse *message,
                  void *closure_data);
typedef void (*CreateNewAccountUserRequest_Closure)
                 (const CreateNewAccountUserRequest *message,
                  void *closure_data);
typedef void (*CreateNewAccountUserResponse_Closure)
                 (const CreateNewAccountUserResponse *message,
                  void *closure_data);
typedef void (*ChangePasswordUserRequest_Closure)
                 (const ChangePasswordUserRequest *message,
                  void *closure_data);
typedef void (*ChangePasswordUserResponse_Closure)
                 (const ChangePasswordUserResponse *message,
                  void *closure_data);
typedef void (*UpdateAlertInfoUserRequest_Closure)
                 (const UpdateAlertInfoUserRequest *message,
                  void *closure_data);
typedef void (*UpdateAlertInfoUserResponse_Closure)
                 (const UpdateAlertInfoUserResponse *message,
                  void *closure_data);
typedef void (*AccountUserMessage_Closure)
                 (const AccountUserMessage *message,
                  void *closure_data);
typedef void (*UserMessage_Closure)
                 (const UserMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    meter_item_type__descriptor;
extern const ProtobufCMessageDescriptor channel_state__descriptor;
extern const ProtobufCMessageDescriptor device_state_model__descriptor;
extern const ProtobufCMessageDescriptor user_login_request__descriptor;
extern const ProtobufCMessageDescriptor user_login_response__descriptor;
extern const ProtobufCMessageDescriptor get_access_token_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_access_token_user_response__descriptor;
extern const ProtobufCMessageDescriptor auth_user_message__descriptor;
extern const ProtobufCMessageDescriptor require_stream_user_request__descriptor;
extern const ProtobufCMessageDescriptor require_stream_user_response__descriptor;
extern const ProtobufCMessageDescriptor control_lane_user_request__descriptor;
extern const ProtobufCMessageDescriptor control_lane_user_response__descriptor;
extern const ProtobufCMessageDescriptor set_active_time_user_request__descriptor;
extern const ProtobufCMessageDescriptor set_active_time_user_response__descriptor;
extern const ProtobufCMessageDescriptor set_cycle_config_user_request__descriptor;
extern const ProtobufCMessageDescriptor set_cycle_config_user_response__descriptor;
extern const ProtobufCMessageDescriptor set_coordinate_user_request__descriptor;
extern const ProtobufCMessageDescriptor set_coordinate_user_response__descriptor;
extern const ProtobufCMessageDescriptor device_control_user_request__descriptor;
extern const ProtobufCMessageDescriptor device_control_user_response__descriptor;
extern const ProtobufCMessageDescriptor state_on_change_user_message__descriptor;
extern const ProtobufCMessageDescriptor update_device_connection_state__descriptor;
extern const ProtobufCMessageDescriptor log_update_user_message__descriptor;
extern const ProtobufCMessageDescriptor error_status_user_message__descriptor;
extern const ProtobufCMessageDescriptor update_power_state_user_message__descriptor;
extern const ProtobufCMessageDescriptor update_schedule_user_message__descriptor;
extern const ProtobufCMessageDescriptor update_mode_user_message__descriptor;
extern const ProtobufCMessageDescriptor device_onchange_user_message__descriptor;
extern const ProtobufCMessageDescriptor sync_time_user_request__descriptor;
extern const ProtobufCMessageDescriptor sync_time_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_device_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_device_user_response__descriptor;
extern const ProtobufCMessageDescriptor add_station_user_request__descriptor;
extern const ProtobufCMessageDescriptor add_station_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_coordinate_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_coordinate_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_meter_in_year_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_meter_in_year_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_meter_in_month_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_meter_in_month_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_meter_in_day_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_meter_in_day_user_response__descriptor;
extern const ProtobufCMessageDescriptor device_user_message__descriptor;
extern const ProtobufCMessageDescriptor get_station_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_station_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_station_list_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_station_list_user_response__descriptor;
extern const ProtobufCMessageDescriptor set_sign_setting_user_request__descriptor;
extern const ProtobufCMessageDescriptor set_sign_setting_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_latest_firmware_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_latest_firmware_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_log_file_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_log_file_user_response__descriptor;
extern const ProtobufCMessageDescriptor delete_station_user_request__descriptor;
extern const ProtobufCMessageDescriptor delete_station_user_response__descriptor;
extern const ProtobufCMessageDescriptor edit_number_card_user_request__descriptor;
extern const ProtobufCMessageDescriptor edit_number_card_user_response__descriptor;
extern const ProtobufCMessageDescriptor update_error_handling_user_request__descriptor;
extern const ProtobufCMessageDescriptor update_diary_log_user_request__descriptor;
extern const ProtobufCMessageDescriptor update_diary_log_user_response__descriptor;
extern const ProtobufCMessageDescriptor insert_accessory_user_request__descriptor;
extern const ProtobufCMessageDescriptor insert_accessory_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_accessories_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_accessories_user_response__descriptor;
extern const ProtobufCMessageDescriptor delete_accessory_user_request__descriptor;
extern const ProtobufCMessageDescriptor delete_accessory_user_response__descriptor;
extern const ProtobufCMessageDescriptor edit_accessory_user_request__descriptor;
extern const ProtobufCMessageDescriptor edit_accessory_user_response__descriptor;
extern const ProtobufCMessageDescriptor update_schedule_user_request__descriptor;
extern const ProtobufCMessageDescriptor update_schedule_user_response__descriptor;
extern const ProtobufCMessageDescriptor get_schedule_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_schedule_user_response__descriptor;
extern const ProtobufCMessageDescriptor station_user_message__descriptor;
extern const ProtobufCMessageDescriptor get_accounts_user_request__descriptor;
extern const ProtobufCMessageDescriptor get_accounts_user_response__descriptor;
extern const ProtobufCMessageDescriptor delete_account_user_request__descriptor;
extern const ProtobufCMessageDescriptor delete_account_user_response__descriptor;
extern const ProtobufCMessageDescriptor create_new_account_user_request__descriptor;
extern const ProtobufCMessageDescriptor create_new_account_user_response__descriptor;
extern const ProtobufCMessageDescriptor change_password_user_request__descriptor;
extern const ProtobufCMessageDescriptor change_password_user_response__descriptor;
extern const ProtobufCMessageDescriptor update_alert_info_user_request__descriptor;
extern const ProtobufCMessageDescriptor update_alert_info_user_response__descriptor;
extern const ProtobufCMessageDescriptor account_user_message__descriptor;
extern const ProtobufCMessageDescriptor user_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_user_5fproto_2eproto__INCLUDED */
